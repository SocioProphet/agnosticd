- name: Stop all the VMs of the project
  include_tasks: stop_vms.yml

- set_fact:
    ec2_ami_hostname:  "{{ ec2_copy_image['src'] }}.{{ guid }}.internal"

- name: Check if the AMI exists
  ec2_ami_info:
    aws_access_key: "{{ aws_access_key_id }}"
    aws_secret_key: "{{ aws_secret_access_key }}"
    region: "{{ aws_region_final | default(aws_region) | default(region) | default('us-east-1')}}"
    filters:
      name: "{{ ec2_copy_image['dest'] }}"
  register: r_ec2_ami_info

- name: Delete AMI if it exists
  ec2_ami:
    aws_access_key: "{{ aws_access_key_id }}"
    aws_secret_key: "{{ aws_secret_access_key }}"
    region: "{{ aws_region_final | default(aws_region) | default(region) | default('us-east-1')}}"
    wait: yes
    image_id: "{{ r_ec2_ami_info.images.0.image_id }}"
    state: absent
  when: "{{ r_ec2_ami_info.images | length }}"

- name: Create AMI from instance
  ec2_ami:
    aws_access_key: "{{ aws_access_key_id }}"
    aws_secret_key: "{{ aws_secret_access_key }}"
    region: "{{ aws_region_final | default(aws_region) | default(region) | default('us-east-1')}}"
    instance_id: "{{ hostvars[ec2_ami_hostname]['instance_id'] }}"
    wait: yes
    name: "{{ ec2_copy_image['dest'] }}"
  register: r_ec2_ami
