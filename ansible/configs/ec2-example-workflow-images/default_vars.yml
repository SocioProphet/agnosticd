guid: CHANGEME                          # Your Global UNIQUE Identifier

################
### Env vars ###
################

env_type: ec2-example-workflow-images   # Name of config to deploy
cloud_provider: ec2 # Which AgnosticD Cloud Provider to use

ansible_user: ec2-user

email: example@example.com               # User info for notifications
output_dir: /tmp/output_dir              # Writable working scratch directory
admin_user: "{{ guid }}-user"            # User created by the project. Leave as {{ guid }}-user
student_name: "{{ guid }}-user"          # This will be used to create a student login ID
project_tag: "{{ env_type }}-{{ guid }}"

## Networking (AWS)
#subdomain_base_suffix: ".example.opentlc.com"
subdomain_base_suffix: ".sandbox477.opentlc.com"
subdomain_base_short: "{{ guid }}"
subdomain_base: "{{ guid }}{{ subdomain_base_suffix }}"


# Auto-generated by default
#student_password: "r3dh4t1!"             # Customize the student password here. Keep in mind these systems may be public facing.
install_student_user: true

default_metadata:
  owner: "{{ email | default('unknownuser') }}"
  Project: "{{ project_tag }}"
  env_type: "{{ env_type }}"

multi_network: false

################################################################################
################################################################################
### Common Host settings
################################################################################
################################################################################

repo_method: "satellite"
# Do you want to run a full yum update
update_packages: false
common_packages:
  - bash-completion
  - tmux
  - wget
  - vim-enhanced

rhel_repos:
  - rhel-8-for-x86_64-appstream-eus-rpms
  - rhel-8-for-x86_64-baseos-eus-rpms
  - rhel-8-for-x86_64-highavailability-eus-rpms
  - ansible-2.9-for-rhel-8-x86_64-rpms
  - openstack-16.2-for-rhel-8-x86_64-rpms
  - fast-datapath-for-rhel-8-x86_64-rpms
  - advanced-virt-for-rhel-8-x86_64-rpms


########################
## Environment Images ##
########################

__workstation_instance_image: "{{ workstation_instance_image }}"
__web_instance_image: "{{ web_instance_image }}"

########################
## Environment Sizing ##
########################
#
__workstation_instance_flavor: 
  ec2: "{{ workstation_instance_flavor  }}"

__web_instance_flavor: 
  ec2: "{{ web_instance_flavor  }}"


security_groups:
  - name: defaultSG
    rules:
      - name: defaultSSHPublic
        description: "SSH public"
        from_port: 22
        to_port: 22
        protocol: tcp
        cidr: "0.0.0.0/0"
        rule_type: Ingress
      - name: defaultWEBPublic
        description: "WEB public"
        from_port: 80
        to_port: 80
        protocol: tcp
        cidr: "0.0.0.0/0"
        rule_type: Ingress

# Environment Instances
instances:
  - name: "workstation"
    count: 1
    unique: true
    public_dns: true
    dns_loadbalancer: false
    image: "{{ __workstation_instance_image }}"
    custom_image: "{{ custom_ami_images_ids[__workstation_instance_image]|default(False) }}"
    flavor: "{{ __workstation_instance_flavor }}"
    userdata: |
        ssh_pwauth:   true
    metadata:
      - AnsibleGroup: "bastions"
      - ostype: "linux"
      - instance_filter: "{{ env_type }}-{{ email }}"
      - guid: "{{ guid }}"
      - env_type: "{{ env_type }}"
    tags:
      - key: "AnsibleGroup"
        value: "bastions"
      - key: "ostype"
        value: "linux"
      - key: "instance_filter"
        value: "{{ env_type }}-{{ email }}"
    networks: 
      - internal
    floating_ip: true
    floating_ip_network: "internal"
    security_groups:
      - defaultSG 
    private_ip: "192.168.0.5"

  - name: "web"
    count: 1
    unique: true
    public_dns: false
    dns_loadbalancer: false
    image: "{{ __web_instance_image }}"
    custom_image: "{{ custom_ami_images_ids[__web_instance_image]|default(False) }}"
    flavor: "{{ __web_instance_flavor }}"
    userdata: |
        ssh_pwauth:   true
        chpasswd:
           list: |
             root:r3dh4t1!
           expire: False

    metadata:
      - AnsibleGroup: "web"
      - ostype: "linux"
      - guid: "{{ guid }}"
      - instance_filter: "{{ env_type }}-{{ email }}"
      - env_type: "{{ env_type }}"
    tags:
      - key: "AnsibleGroup"
        value: "web"
      - key: "ostype"
        value: "linux"
      - key: "instance_filter"
        value: "{{ env_type }}-{{ email }}"
    networks: 
      - internal
    floating_ip: false
    private_ip: "192.168.0.10"
    security_groups:
      - defaultSG 


# Stuff that only GPTE cares about:
install_ipa_client: false

################################################################################
################################################################################
### Common Host settings
################################################################################
################################################################################



###V2WORK, these should just be set as default listed in the documentation
install_bastion: true
install_common: false
## SB Don't set software_to_deploy from here, always use extra vars (-e) or "none" will be used
#software_to_deploy: none


## guid is the deployment unique identifier, it will be appended to all tags,
## files and anything that identifies this environment from another.
# Using GUID is required, if it is not passed in the command line or uncommented
# here the deployment will fail
#guid: defaultguid

###V2WORK, these should just be set as default listed in the documentation
# This is where the ssh_config file will be created, this file is used to
# define the communication method to all the hosts in the deployment
deploy_local_ssh_config_location: "{{output_dir}}/"


### If you want a Key Pair name created and injected into the hosts,
# set `set_env_authorized_key` to true and set the keyname in `env_authorized_key`
# you can use the key used to create the environment or use your own self generated key
# if you set "use_own_key" to false your PRIVATE key will be copied to the bastion. (This is {{key_name}})

###V2WORK, these should just be set as default listed in the documentation
use_own_key: true
env_authorized_key: "{{guid}}key"
set_env_authorized_key: true

###V2WORK THIS SHOULD MOVE INTO THE ROLE
# This var is used to identify stack (cloudformation, azure resourcegroup, ...)
project_tag: "{{ env_type }}-{{ guid }}"
